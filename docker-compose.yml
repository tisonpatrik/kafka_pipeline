name: kafka_vs_redpanda
services:
  producer:
    build:
      context: .
      dockerfile: producer/Dockerfile
    hostname: producer
    container_name: producer
    depends_on:
      - redpanda
    ports:
      - "8000:8000"
    volumes:
      - ./producer/src/producer:/app/producer

  consumer:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    hostname: consumer
    container_name: consumer
    depends_on:
      - redpanda
    ports:
      - "8100:8000"
    volumes:
      - ./consumer/src/consumer:/app/consumer

  redpanda:
    image: redpandadata/redpanda:latest
    container_name: redpanda
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092

  redpanda-console:
    image: redpandadata/console:latest
    container_name: redpanda-console
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda
